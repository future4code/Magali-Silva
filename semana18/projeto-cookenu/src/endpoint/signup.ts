import {Request, Response} from 'express'
import { generateId } from '../service/generateId'
import { hash } from '../service/generateHash'
import { insertUser } from '../data/insertUser'
import { generateToken } from '../service/generateToken'

export const signup = async(req: Request, res:Response) => {
    try {
        const {name, email, password} = req.body
        let message = 'User created and token generated by jwt'

        if (!name || !email || !password) {
            res.statusCode = 406
            message = '"name", "email" and "password" are required'
            throw new Error(message)
        }

        if(password.length < 6){
            message = 'Password must be at least 6 characters'
            throw new Error(message)
        }

        const id: string = generateId()
        const cypherPassword: string = await hash(password)

        await insertUser({
            id,
            name,
            email,
            password: cypherPassword
        })

        const token: string = generateToken({id})

        res.status(200).send({
            message: message,
            access_token: token
        })

    } catch (error) {
        res.status(400).send({message: error.message || error.sqlMessage})
    }
}